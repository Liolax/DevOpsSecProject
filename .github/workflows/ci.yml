name: Continuous Integration

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Cache Node Modules for Frontend
      - name: Cache Frontend Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 3: Cache Node Modules for Backend
      - name: Cache Backend Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 4: Set Docker Image Tag based on branch or tag
      - name: Set Docker Image Tag
        id: set_tag
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          elif [ "${GITHUB_REF}" = "refs/heads/development" ]; then
            echo "IMAGE_TAG=development" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "IMAGE_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=unknown" >> $GITHUB_ENV
          fi

      # Step 5: Build the Frontend Image using the Dockerfile in the frontend folder
      - name: Build Frontend Image
        run: |
          docker build -t liolax/my-devopssec-ca-app:frontend-${{ env.IMAGE_TAG }} -f frontend/Dockerfile frontend

      # Step 6: Build the Backend Image using the Dockerfile in the backend folder
      - name: Build Backend Image
        run: |
          docker build -t liolax/my-devopssec-ca-app:backend-${{ env.IMAGE_TAG }} -f backend/Dockerfile backend

      # Step 7: Log in to Docker Hub using secrets
      - name: Docker Login
        run: |
          echo "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Step 8: Push the Frontend Image to Docker Hub
      - name: Push Frontend Image
        run: |
          docker push liolax/my-devopssec-ca-app:frontend-${{ env.IMAGE_TAG }}

      # Step 9: Push the Backend Image to Docker Hub
      - name: Push Backend Image
        run: |
          docker push liolax/my-devopssec-ca-app:backend-${{ env.IMAGE_TAG }}
